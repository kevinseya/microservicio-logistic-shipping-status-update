// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
  "swagger": "2.0",
  "info": {
    "title": "Shipment Management API",
    "description": "API for managing shipments.",
    "contact": {}
  },
  "paths": {
    "/api/shippment/update-state/{id}": {
      "patch": {
        "summary": "Update the state of a shipment",
        "description": "This endpoint allows updating the status of an existing shipment.",
        "tags": ["shippment"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the shipment to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "state",
            "description": "New state for the shipment",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "string",
                  "description": "Updated state of the shipment"
                }
              },
              "required": ["state"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipment status updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Shipment status updated successfully"
                },
                "shipment": {
                  "$ref": "#/definitions/Shipment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              }
            }
          },
          "404": {
            "description": "Shipment not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Shipment not found"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Server Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Shipment": {
      "type": "object",
      "properties": {
        "shipmentID": {
          "type": "string",
          "description": "ID of the shipment"
        },
        "orderID": {
          "type": "integer",
          "description": "ID of the order"
        },
        "carrierID": {
          "type": "integer",
          "description": "ID of the carrier"
        },
        "state": {
          "type": "string",
          "description": "Current state of the shipment"
        },
        "dateAsignment": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the shipment was assigned"
        }
      },
      "required": ["state"]
    }
  }
}`

var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Shipment Management API",
	Description:      "API for managing shipments.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
